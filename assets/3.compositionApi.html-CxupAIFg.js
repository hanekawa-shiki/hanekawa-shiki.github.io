import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as s,a,o as l}from"./app-DXzbaQ7U.js";const n="/assets/lifecycle_old-BV7UNyk7.png",d="/assets/lifecycle_new-BjvV7vPE.svg",h={},k=n+"#vueLeft",p=d+"#vueRight";function v(f,i){return l(),t("div",null,i[0]||(i[0]=[s(`<h1 id="常用-composition-api" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#常用-composition-api" data-v-865fb7e5><span data-v-865fb7e5>常用 Composition API</span></a></h1><p data-v-865fb7e5>官方文档: <a href="https://v3.cn.vuejs.org/guide/composition-api-introduction.html" target="_blank" rel="noopener noreferrer" data-v-865fb7e5>https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p><h2 id="_1-拉开序幕的setup" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_1-拉开序幕的setup" data-v-865fb7e5><span data-v-865fb7e5>1.拉开序幕的setup</span></a></h2><ol data-v-865fb7e5><li data-v-865fb7e5>理解：Vue3.0中一个新的配置项，值为一个函数。</li><li data-v-865fb7e5>setup是所有<strong style="color:#DD5145;" data-v-865fb7e5>Composition API（组合API）</strong><i style="color:gray;font-weight:bold;" data-v-865fb7e5>“ 表演的舞台 ”</i>。</li><li data-v-865fb7e5>组件中所用到的：数据、方法等等，均要配置在setup中。</li><li data-v-865fb7e5>setup函数的两种返回值： <ol data-v-865fb7e5><li data-v-865fb7e5>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li><li data-v-865fb7e5><span style="color:#aad;" data-v-865fb7e5>若返回一个渲染函数：则可以自定义渲染内容。（了解）</span></li></ol></li><li data-v-865fb7e5>注意点： <ol data-v-865fb7e5><li data-v-865fb7e5>尽量不要与Vue2.x配置混用 <ul data-v-865fb7e5><li data-v-865fb7e5>Vue2.x配置（data、methos、computed...）中<strong style="color:#DD5145;" data-v-865fb7e5>可以访问到</strong>setup中的属性、方法。</li><li data-v-865fb7e5>但在setup中<strong style="color:#DD5145;" data-v-865fb7e5>不能访问到</strong>Vue2.x配置（data、methos、computed...）。</li><li data-v-865fb7e5>如果有重名, setup优先。</li></ul></li><li data-v-865fb7e5>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li></ol></li></ol><h2 id="_2-ref函数" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_2-ref函数" data-v-865fb7e5><span data-v-865fb7e5>2.ref函数</span></a></h2><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>作用: 定义一个响应式的数据</p></li><li data-v-865fb7e5><p data-v-865fb7e5>语法: <code data-v-865fb7e5>const xxx = ref(initValue)</code></p><ul data-v-865fb7e5><li data-v-865fb7e5>创建一个包含响应式数据的<strong style="color:#DD5145;" data-v-865fb7e5>引用对象（reference对象，简称ref对象）</strong>。</li><li data-v-865fb7e5>JS中操作数据： <code data-v-865fb7e5>xxx.value</code></li><li data-v-865fb7e5>模板中读取数据: 不需要.value，直接：</li></ul><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-865fb7e5><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-865fb7e5><code data-v-865fb7e5><span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>&gt;{{xxx}}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-865fb7e5><div class="line-number" data-v-865fb7e5></div></div></div></li><li data-v-865fb7e5><p data-v-865fb7e5>备注：</p><ul data-v-865fb7e5><li data-v-865fb7e5>接收的数据可以是：基本类型、也可以是对象类型。</li><li data-v-865fb7e5>基本类型的数据：响应式依然是靠<code data-v-865fb7e5>Object.defineProperty()</code>的<code data-v-865fb7e5>get</code>与<code data-v-865fb7e5>set</code>完成的。</li><li data-v-865fb7e5>对象类型的数据：内部 <i style="color:gray;font-weight:bold;" data-v-865fb7e5>“ 求助 ”</i> 了Vue3.0中的一个新函数—— <code data-v-865fb7e5>reactive</code>函数。</li></ul></li></ul><h2 id="_3-reactive函数" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_3-reactive函数" data-v-865fb7e5><span data-v-865fb7e5>3.reactive函数</span></a></h2><ul data-v-865fb7e5><li data-v-865fb7e5>作用: 定义一个<strong style="color:#DD5145;" data-v-865fb7e5>对象类型</strong>的响应式数据（基本类型不要用它，要用<code data-v-865fb7e5>ref</code>函数）</li><li data-v-865fb7e5>语法：<code data-v-865fb7e5>const 代理对象= reactive(源对象)</code>接收一个对象（或数组），返回一个<strong style="color:#DD5145;" data-v-865fb7e5>代理对象（Proxy的实例对象，简称proxy对象）</strong></li><li data-v-865fb7e5>reactive定义的响应式数据是“深层次的”。</li><li data-v-865fb7e5>内部基于 ES6 的 Proxy 实现，通过代理对象操作源对象内部数据进行操作。</li></ul><h2 id="_4-vue3-0中的响应式原理" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_4-vue3-0中的响应式原理" data-v-865fb7e5><span data-v-865fb7e5>4.Vue3.0中的响应式原理</span></a></h2><h3 id="vue2-x的响应式" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#vue2-x的响应式" data-v-865fb7e5><span data-v-865fb7e5>vue2.x的响应式</span></a></h3><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>实现原理：</p><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>对象类型：通过<code data-v-865fb7e5>Object.defineProperty()</code>对属性的读取、修改进行拦截（数据劫持）。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-865fb7e5><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-865fb7e5><code data-v-865fb7e5><span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>defineProperty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;count&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, {</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>    get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5> () {}, </span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>    set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5> () {}</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-865fb7e5><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div></div></div></li></ul></li><li data-v-865fb7e5><p data-v-865fb7e5>存在问题：</p><ul data-v-865fb7e5><li data-v-865fb7e5>新增属性、删除属性, 界面不会更新。</li><li data-v-865fb7e5>直接通过下标修改数组, 界面不会自动更新。</li></ul></li></ul><h3 id="vue3-0的响应式" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#vue3-0的响应式" data-v-865fb7e5><span data-v-865fb7e5>Vue3.0的响应式</span></a></h3><ul data-v-865fb7e5><li data-v-865fb7e5>实现原理: <ul data-v-865fb7e5><li data-v-865fb7e5>通过Proxy（代理）: 拦截对象中任意属性的变化, 包括：属性值的读写、属性的添加、属性的删除等。</li><li data-v-865fb7e5>通过Reflect（反射）: 对源对象的属性进行操作。</li><li data-v-865fb7e5>MDN文档中描述的Proxy与Reflect： <ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener noreferrer" data-v-865fb7e5>Proxy</a></p></li><li data-v-865fb7e5><p data-v-865fb7e5><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect" target="_blank" rel="noopener noreferrer" data-v-865fb7e5>Reflect</a></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-865fb7e5><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-865fb7e5><code data-v-865fb7e5><span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5> Proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, {</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>    //拦截读取属性值</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>    get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>) {</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>      return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> Reflect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>    },</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>    // 拦截设置属性值或添加新属性</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>    set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>) {</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>      return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> Reflect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>    },</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>    // 拦截删除属性</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>    deleteProperty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>) {</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>      return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> Reflect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>deleteProperty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>    }</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>})</span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5> &#39;tom&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-865fb7e5><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div></div></div></li></ul></li></ul></li></ul><h2 id="_5-reactive对比ref" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_5-reactive对比ref" data-v-865fb7e5><span data-v-865fb7e5>5.reactive对比ref</span></a></h2><ul data-v-865fb7e5><li data-v-865fb7e5>从定义数据角度对比： <ul data-v-865fb7e5><li data-v-865fb7e5>ref用来定义：<strong style="color:#DD5145;" data-v-865fb7e5>基本类型数据</strong>。</li><li data-v-865fb7e5>reactive用来定义：<strong style="color:#DD5145;" data-v-865fb7e5>对象（或数组）类型数据</strong>。</li><li data-v-865fb7e5>备注：ref也可以用来定义<strong style="color:#DD5145;" data-v-865fb7e5>对象（或数组）类型数据</strong>, 它内部会自动通过<code data-v-865fb7e5>reactive</code>转为<strong style="color:#DD5145;" data-v-865fb7e5>代理对象</strong>。</li></ul></li><li data-v-865fb7e5>从原理角度对比： <ul data-v-865fb7e5><li data-v-865fb7e5>ref通过<code data-v-865fb7e5>Object.defineProperty()</code>的<code data-v-865fb7e5>get</code>与<code data-v-865fb7e5>set</code>来实现响应式（数据劫持）。</li><li data-v-865fb7e5>reactive通过使用<strong style="color:#DD5145;" data-v-865fb7e5>Proxy</strong>来实现响应式（数据劫持）, 并通过<strong style="color:#DD5145;" data-v-865fb7e5>Reflect</strong>操作<strong style="color:orange;" data-v-865fb7e5>源对象</strong>内部的数据。</li></ul></li><li data-v-865fb7e5>从使用角度对比： <ul data-v-865fb7e5><li data-v-865fb7e5>ref定义的数据：操作数据<strong style="color:#DD5145;" data-v-865fb7e5>需要</strong><code data-v-865fb7e5>.value</code>，读取数据时模板中直接读取<strong style="color:#DD5145;" data-v-865fb7e5>不需要</strong><code data-v-865fb7e5>.value</code>。</li><li data-v-865fb7e5>reactive定义的数据：操作数据与读取数据：<strong style="color:#DD5145;" data-v-865fb7e5>均不需要</strong><code data-v-865fb7e5>.value</code>。</li></ul></li></ul><h2 id="_6-setup的两个注意点" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_6-setup的两个注意点" data-v-865fb7e5><span data-v-865fb7e5>6.setup的两个注意点</span></a></h2><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>setup执行的时机</p><ul data-v-865fb7e5><li data-v-865fb7e5>在beforeCreate之前执行一次，this是undefined。</li></ul></li><li data-v-865fb7e5><p data-v-865fb7e5>setup的参数</p><ul data-v-865fb7e5><li data-v-865fb7e5>props：值为对象，包含：组件外部传递过来，且组件内部声明接收了的属性。</li><li data-v-865fb7e5>context：上下文对象 <ul data-v-865fb7e5><li data-v-865fb7e5>attrs: 值为对象，包含：组件外部传递过来，但没有在props配置中声明的属性, 相当于 <code data-v-865fb7e5>this.$attrs</code>。</li><li data-v-865fb7e5>slots: 收到的插槽内容, 相当于 <code data-v-865fb7e5>this.$slots</code>。</li><li data-v-865fb7e5>emit: 分发自定义事件的函数, 相当于 <code data-v-865fb7e5>this.$emit</code>。</li></ul></li></ul></li></ul><h2 id="_7-计算属性与监视" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_7-计算属性与监视" data-v-865fb7e5><span data-v-865fb7e5>7.计算属性与监视</span></a></h2><h3 id="_1-computed函数" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_1-computed函数" data-v-865fb7e5><span data-v-865fb7e5>1.computed函数</span></a></h3><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>与Vue2.x中computed配置功能一致</p></li><li data-v-865fb7e5><p data-v-865fb7e5>写法</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-865fb7e5><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-865fb7e5><code data-v-865fb7e5><span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>computed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5> &#39;vue&#39;</span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(){</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>    ...</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>  //计算属性——简写</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5> fullName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5> computed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>firstName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5> &#39;-&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>lastName</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>    })</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>    //计算属性——完整</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5> fullName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5> computed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>({</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>        get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(){</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>            return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>firstName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5> &#39;-&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>lastName</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>        },</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>        set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>){</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>            const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;" data-v-865fb7e5> nameArr</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;-&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>            person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>firstName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5> nameArr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>]</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>            person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>lastName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5> nameArr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>]</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>        }</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>    })</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-865fb7e5><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div></div></div></li></ul><h3 id="_2-watch函数" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_2-watch函数" data-v-865fb7e5><span data-v-865fb7e5>2.watch函数</span></a></h3><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>与Vue2.x中watch配置功能一致</p></li><li data-v-865fb7e5><p data-v-865fb7e5>两个小“坑”：</p><ul data-v-865fb7e5><li data-v-865fb7e5>监视reactive定义的响应式数据时：oldValue无法正确获取、强制开启了深度监视（deep配置失效）。</li><li data-v-865fb7e5>监视reactive定义的响应式数据中某个属性时：deep配置有效。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-865fb7e5><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-865fb7e5><code data-v-865fb7e5><span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//情况一：监视ref定义的响应式数据</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;sum变化了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>},{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>immediate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>})</span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//情况二：监视多个ref定义的响应式数据</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>([</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>],(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;sum或msg变化了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>}) </span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>/* 情况三：监视reactive定义的响应式数据</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>      若watch监视的是reactive定义的响应式数据，则无法正确获得oldValue！！</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>      若watch监视的是reactive定义的响应式数据，则强制开启了深度监视 </span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>*/</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;person变化了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>},{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>immediate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>deep</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>}) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//此处的deep配置不再奏效</span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//情况四：监视reactive定义的响应式数据中的某个属性</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;person的job变化了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>},{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>immediate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>deep</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>}) </span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//情况五：监视reactive定义的响应式数据中的某些属性</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>([()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;" data-v-865fb7e5>job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;" data-v-865fb7e5>name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>],(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;person的job变化了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>},{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>immediate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>deep</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>})</span></span>
<span class="line" data-v-865fb7e5></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//特殊情况</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;person的job变化了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>newValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;" data-v-865fb7e5>oldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>},{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>deep</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;" data-v-865fb7e5>:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;" data-v-865fb7e5>true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>}) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//此处由于监视的是reactive素定义的对象中的某个属性，所以deep配置有效</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-865fb7e5><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div></div></div></li></ul><h3 id="_3-watcheffect函数" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_3-watcheffect函数" data-v-865fb7e5><span data-v-865fb7e5>3.watchEffect函数</span></a></h3><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>watch的套路是：既要指明监视的属性，也要指明监视的回调。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>watchEffect的套路是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>watchEffect有点像computed：</p><ul data-v-865fb7e5><li data-v-865fb7e5>但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。</li><li data-v-865fb7e5>而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;" data-v-865fb7e5><pre class="shiki shiki-themes one-light one-dark-pro vp-code" data-v-865fb7e5><code data-v-865fb7e5><span class="line" data-v-865fb7e5><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;" data-v-865fb7e5>//watchEffect所指定的回调中用到的数据只要发生变化，则直接重新执行回调。</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>watchEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>{</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;" data-v-865fb7e5> x1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>value</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;" data-v-865fb7e5>    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;" data-v-865fb7e5> x2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;" data-v-865fb7e5> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5> person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;" data-v-865fb7e5>age</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;" data-v-865fb7e5>    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;" data-v-865fb7e5>log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;" data-v-865fb7e5>&#39;watchEffect配置的回调执行了&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>)</span></span>
<span class="line" data-v-865fb7e5><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;" data-v-865fb7e5>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-865fb7e5><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div><div class="line-number" data-v-865fb7e5></div></div></div></li></ul><h2 id="_8-生命周期" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_8-生命周期" data-v-865fb7e5><span data-v-865fb7e5>8.生命周期</span></a></h2>`,25),a("p",null,[a("img",{src:k,alt:"vue2.x的生命周期",title:"vue2.x的生命周期"}),a("br"),a("img",{src:p,alt:"vue3.0的生命周期",title:"vue3.0的生命周期"})],-1),s('<ul data-v-865fb7e5><li data-v-865fb7e5>Vue3.0中可以继续使用Vue2.x中的生命周期钩子，但有有两个被更名： <ul data-v-865fb7e5><li data-v-865fb7e5><code data-v-865fb7e5>beforeDestroy</code>改名为 <code data-v-865fb7e5>beforeUnmount</code></li><li data-v-865fb7e5><code data-v-865fb7e5>destroyed</code>改名为 <code data-v-865fb7e5>unmounted</code></li></ul></li><li data-v-865fb7e5>Vue3.0也提供了 Composition API 形式的生命周期钩子，与Vue2.x中钩子对应关系如下： <ul data-v-865fb7e5><li data-v-865fb7e5><code data-v-865fb7e5>beforeCreate</code>===&gt;<code data-v-865fb7e5>setup()</code></li><li data-v-865fb7e5><code data-v-865fb7e5>created</code>=======&gt;<code data-v-865fb7e5>setup()</code></li><li data-v-865fb7e5><code data-v-865fb7e5>beforeMount</code> ===&gt;<code data-v-865fb7e5>onBeforeMount</code></li><li data-v-865fb7e5><code data-v-865fb7e5>mounted</code>=======&gt;<code data-v-865fb7e5>onMounted</code></li><li data-v-865fb7e5><code data-v-865fb7e5>beforeUpdate</code>===&gt;<code data-v-865fb7e5>onBeforeUpdate</code></li><li data-v-865fb7e5><code data-v-865fb7e5>updated</code> =======&gt;<code data-v-865fb7e5>onUpdated</code></li><li data-v-865fb7e5><code data-v-865fb7e5>beforeUnmount</code> ==&gt;<code data-v-865fb7e5>onBeforeUnmount</code></li><li data-v-865fb7e5><code data-v-865fb7e5>unmounted</code> =====&gt;<code data-v-865fb7e5>onUnmounted</code></li></ul></li></ul><h2 id="_9-自定义hook函数" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_9-自定义hook函数" data-v-865fb7e5><span data-v-865fb7e5>9.自定义hook函数</span></a></h2><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>什么是hook？—— 本质是一个函数，把setup函数中使用的Composition API进行了封装。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>类似于vue2.x中的mixin。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>自定义hook的优势: 复用代码, 让setup中的逻辑更清楚易懂。</p></li></ul><h2 id="_10-toref" tabindex="-1" data-v-865fb7e5><a class="header-anchor" href="#_10-toref" data-v-865fb7e5><span data-v-865fb7e5>10.toRef</span></a></h2><ul data-v-865fb7e5><li data-v-865fb7e5><p data-v-865fb7e5>作用：创建一个 ref 对象，其value值指向另一个对象中的某个属性。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>语法：<code data-v-865fb7e5>const name = toRef(person,&#39;name&#39;)</code></p></li><li data-v-865fb7e5><p data-v-865fb7e5>应用: 要将响应式对象中的某个属性单独提供给外部使用时。</p></li><li data-v-865fb7e5><p data-v-865fb7e5>扩展：<code data-v-865fb7e5>toRefs</code> 与<code data-v-865fb7e5>toRef</code>功能一致，但可以批量创建多个 ref 对象，语法：<code data-v-865fb7e5>toRefs(person)</code></p></li></ul>',5)]))}const o=e(h,[["render",v],["__scopeId","data-v-865fb7e5"]]),A=JSON.parse('{"path":"/framework_front/vue3/3.compositionApi.html","title":"常用 Composition API","lang":"zh-CN","frontmatter":{"article":false,"description":"常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到的：...","head":[["meta",{"property":"og:url","content":"https://hanekawa.top/framework_front/vue3/3.compositionApi.html"}],["meta",{"property":"og:site_name","content":"hanekawa-shiki"}],["meta",{"property":"og:title","content":"常用 Composition API"}],["meta",{"property":"og:description","content":"常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到的：..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-08T11:16:28.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-08T11:16:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"常用 Composition API\\",\\"description\\":\\"常用 Composition API 官方文档: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.拉开序幕的setup 理解：Vue3.0中一个新的配置项，值为一个函数。 setup是所有Composition API（组合API）“ 表演的舞台 ”。 组件中所用到的：...\\"}"]]},"git":{"createdTime":1655200609000,"updatedTime":1720437388000,"contributors":[{"name":"shiki","username":"shiki","email":"kamiacgxu@gmail.com","commits":2,"url":"https://github.com/shiki"},{"name":"kamishima-kaede","username":"kamishima-kaede","email":"kamiacgxu@gmail.com","commits":1,"url":"https://github.com/kamishima-kaede"}]},"readingTime":{"minutes":6.74,"words":2021},"filePathRelative":"framework_front/vue3/3.compositionApi.md","localizedDate":"2022年6月14日","excerpt":"\\n<p>官方文档: <a href=\\"https://v3.cn.vuejs.org/guide/composition-api-introduction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p>\\n<h2>1.拉开序幕的setup</h2>\\n<ol>\\n<li>理解：Vue3.0中一个新的配置项，值为一个函数。</li>\\n<li>setup是所有<strong style=\\"color:#DD5145\\">Composition API（组合API）</strong><i style=\\"color:gray;font-weight:bold\\">“ 表演的舞台 ”</i>。</li>\\n<li>组件中所用到的：数据、方法等等，均要配置在setup中。</li>\\n<li>setup函数的两种返回值：\\n<ol>\\n<li>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li>\\n<li><span style=\\"color:#aad\\">若返回一个渲染函数：则可以自定义渲染内容。（了解）</span></li>\\n</ol>\\n</li>\\n<li>注意点：\\n<ol>\\n<li>尽量不要与Vue2.x配置混用\\n<ul>\\n<li>Vue2.x配置（data、methos、computed...）中<strong style=\\"color:#DD5145\\">可以访问到</strong>setup中的属性、方法。</li>\\n<li>但在setup中<strong style=\\"color:#DD5145\\">不能访问到</strong>Vue2.x配置（data、methos、computed...）。</li>\\n<li>如果有重名, setup优先。</li>\\n</ul>\\n</li>\\n<li>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}');export{o as comp,A as data};
