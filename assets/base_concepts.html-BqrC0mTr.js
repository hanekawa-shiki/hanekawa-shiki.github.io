import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,o as n}from"./app-D6e8Dxqj.js";const l={};function t(d,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h2 id="css数据类型" tabindex="-1"><a class="header-anchor" href="#css数据类型"><span><code>css</code>数据类型</span></a></h2><p>参考<a href="https://www.zhangxinxu.com/wordpress/2019/11/css-value-type/" target="_blank" rel="noopener noreferrer">CSS值类型文档大全</a></p><h2 id="css单位" tabindex="-1"><a class="header-anchor" href="#css单位"><span><code>css</code>单位</span></a></h2><p>参考<a href="https://www.zhangxinxu.com/wordpress/2011/03/css-css3-unit-units/" target="_blank" rel="noopener noreferrer">CSS/CSS3长度、时间、频率、角度单位大全</a></p><h2 id="css全局关键字属性" tabindex="-1"><a class="header-anchor" href="#css全局关键字属性"><span><code>css</code>全局关键字属性</span></a></h2><ul><li>inherit 继承</li><li>initial 初始值</li><li>unset 不固定值</li><li>revert 恢复值</li></ul><h2 id="supports规则" tabindex="-1"><a class="header-anchor" href="#supports规则"><span><code>@supports</code>规则</span></a></h2><p>语法</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@supports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;supports-condition&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">supports-condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> = ( &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ) | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">not ( &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ) | ( &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[ and (&lt;var&gt;) ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> | ( &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[ or (&lt;var&gt;) ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="外在尺寸" tabindex="-1"><a class="header-anchor" href="#外在尺寸"><span>外在尺寸</span></a></h2><h3 id="stretch、available和fill-available" tabindex="-1"><a class="header-anchor" href="#stretch、available和fill-available"><span><code>stretch</code>、<code>available</code>和<code>fill-available</code></span></a></h3><p>让元素的尺寸自动填满可用空间。</p><ul><li><code>stretch</code>：弹性拉伸，是最新的规范中定义的关键字，替换之前的<code>fill-available</code>和<code>available</code>。</li><li><code>available</code>：可用空间。</li><li><code>fill-available</code>：填充可用空间。</li></ul><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 最佳实践 */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">-webkit-fill-available</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">-moz-available</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内在尺寸" tabindex="-1"><a class="header-anchor" href="#内在尺寸"><span>内在尺寸</span></a></h2><h3 id="width-fit-content" tabindex="-1"><a class="header-anchor" href="#width-fit-content"><span><code>width:fit-content</code></span></a></h3><p><code>fit-content</code>关键字优点：</p><ul><li>1.不会破坏元素的原始<code>diaplay</code>计算值</li><li><strong>2.元素尺寸有了确定的值</strong><ul><li>比如<code>margin:auto</code>实现居中效果需要设置具体的<code>width</code>和<code>height</code>值。</li><li>兼容性没那么好，建议带上浏览器私有前缀</li></ul></li></ul><h3 id="width-min-content" tabindex="-1"><a class="header-anchor" href="#width-min-content"><span><code>width:min-content</code></span></a></h3><p>“首选最小宽度”或者“最小内容宽度”</p><p>元素由<code>content-box</code>、<code>padding-box</code>、<code>border-box</code>和<code>margin-box</code>组成，元素最终占据的尺寸由这4个盒子占据的尺寸决定。其中<code>padding-box</code>、<code>border-box</code>和<code>margin-box</code>的尺寸表现规则不会因为元素的不同而有所不同，但是<code>content-box</code>不一样，它随着内容的不同，首选最小宽度也会不同。</p><ul><li>替换元素的首选最小宽度是当前元素内容自身的宽度。</li><li>CJK文字的最小宽度为单个文字，如果含有避头标点或者避尾那最小宽度包含标点符号。中文破折号例外，被认为是一个中文单元</li><li>非CJK文字最小宽度以字符单元宽度决定，所有连续的英文字母、数字和标点都被认为是一个字符单元，直到遇到中断字符。</li><li>最终首选最小宽度：一个元素最终的首选最小宽度是所有内部子元素中最大的那个首选最小宽度值。</li></ul><h3 id="width-max-content" tabindex="-1"><a class="header-anchor" href="#width-max-content"><span><code>width:max-content</code></span></a></h3><p><code>max-content</code>关键字表示最大内容宽度，<code>max-content</code>关键字的作用是让元素尽可能大，保证图文内容在一行显示，哪怕最终的宽度溢出外部容器元素。</p><p>使用价值：</p><ul><li>1.各项宽度不确定，整体宽度自适应。</li><li>2.当前项的内容较少。</li><li>3.当前项的宽度需要尽可能的小。</li></ul><p>所有需要使用<code>max-content</code>关键字的场景，都能使用<code>white-space:nowrap</code>声明实现一模一样的效果，并且<code>white-space:nowrap</code>的兼容性更好。</p><h2 id="逻辑属性" tabindex="-1"><a class="header-anchor" href="#逻辑属性"><span>逻辑属性</span></a></h2><p>方向与流：<code>margin-right</code>是基于反向的<code>CSS</code>属性，<code>margin-line-end</code>是基于流的<code>CSS</code>属性。</p><p><code>margin-line-end</code>：内联元素文档流结束的方向。</p><p><code>CSS</code>逻辑属性需要配合<code>writing-mode</code>属性、<code>direction</code>属性或者<code>text-orientation</code>使用。</p><p>适合使用<code>CSS</code>逻辑属性的场景：<strong>对称布局</strong>。</p><h3 id="inline-block与start-end" tabindex="-1"><a class="header-anchor" href="#inline-block与start-end"><span><code>inline/block</code>与<code>start/end</code></span></a></h3><p>所有<code>CSS</code>逻辑属性都是围绕<code>inline/block</code>与<code>start/end</code>展开的。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 默认情况下margin方位属性和margin逻辑属性相互的映射关系 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-left</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ↔  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-inline-start</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-top</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     ↔  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-block-start</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-right</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   ↔  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-inline-end</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-bottom</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  ↔  </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-block-end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>inline/block</code>表示方向（水平/垂直），<code>start/end</code>表示起止方位。 <code>inline</code>元素（文字、图片、按钮等）默认是从左往右水平排列的；<code>block</code>元素（如<code>&lt;div&gt;</code>、<code>&lt;p&gt;</code>元素等）默认是从上往下垂直排列的。</p><h3 id="width-height属性与inline-size-block-size逻辑属性" tabindex="-1"><a class="header-anchor" href="#width-height属性与inline-size-block-size逻辑属性"><span><code>width/height</code>属性与<code>inline-size/block-size</code>逻辑属性</span></a></h3><p>默认情况下，<code>width</code>属性对应的<code>CSS</code>逻辑属性是<code>inline-size</code>，<code>height</code>属性对应的<code>CSS</code>逻辑属性是<code>block-size</code>。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*浏览器支持 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">inline-size</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fit-content</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">inline-size</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">min-content</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">inline-size</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-content</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 对应逻辑属性关系 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">width        ↔   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">inline-size</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">height       ↔   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">block-size</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">min-width</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ↔   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">min-inline-size</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-width</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ↔   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-inline-size</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">min-height</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   ↔   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">min-block-size</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-height</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   ↔   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-block-size</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="margin-padding-border演变而来的逻辑属性" tabindex="-1"><a class="header-anchor" href="#margin-padding-border演变而来的逻辑属性"><span><code>margin/padding/border</code>演变而来的逻辑属性</span></a></h3><ul><li>margin-inline-start、margin-inline-end、margin-block-start、margin- block-end；</li><li>padding-inline-start、padding-inline-end、padding-block-start、padding-block-end；</li><li>border-inline-start、border-inline-end、border-block-start、border- block-end；</li><li>border-inline-start-color、border-inline-end-color、border-block- start-color、border-block-end-color；</li><li>border-inline-start-style、border-inline-end-style、border-block- start-style、border-block-end-style；</li><li>border-inline-start-width、border-inline-end-width、border-block- start-width、border-block-end-width。</li></ul><p>缩写：</p><ul><li>margin-inline、margin-block；</li><li>padding-inline、padding-block；</li><li>border-inline、border-block；</li><li>border-inline-color、border-block-color；</li><li>border-inline-style、border-block-style；</li><li>border-inline-width、border-block-width。</li></ul><h3 id="text-align属性支持的逻辑属性值" tabindex="-1"><a class="header-anchor" href="#text-align属性支持的逻辑属性值"><span><code>text-align</code>属性支持的逻辑属性值</span></a></h3><p>对<code>text-align</code>属性而言，演变的不是属性而是属性值。</p><ul><li>text-align: start</li><li>text-align: end</li></ul><h3 id="inset" tabindex="-1"><a class="header-anchor" href="#inset"><span><code>inset</code></span></a></h3><p>使用绝对定位的时候经常会用到<code>left</code>、<code>top</code>、<code>right</code>、<code>bottom</code>等属性。与之相对应的<code>CSS</code>逻辑属性，全部都是以<code>inset</code>开头：</p><ul><li>inset-inline-start</li><li>inset-inline-end</li><li>inset-block-start</li><li>inset-block-end</li></ul><p>缩写：</p><ul><li>inset-inline</li><li>inset-block</li></ul><p>或者：</p><ul><li>inset</li></ul><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.overlay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  position: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">absolute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  inset: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="border-image" tabindex="-1"><a class="header-anchor" href="#border-image"><span><code>border-image</code></span></a></h2><p>学习关键点：</p><ul><li>一是源图像的划分；</li><li>二是九宫格尺寸的控制。</li></ul><h3 id="border-image-source" tabindex="-1"><a class="header-anchor" href="#border-image-source"><span><code>border-image-source</code></span></a></h3><p>图像源</p><h3 id="border-image-slice" tabindex="-1"><a class="header-anchor" href="#border-image-slice"><span><code>border-image-slice</code></span></a></h3><p>默认值为100%。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image-slice</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">number-percentage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;{1,4} &amp;&amp; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fill?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>划分的方位和顺序同<code>margin</code>属性、<code>padding</code>属性一样，遵循上、右、下、左的顺序。表示在距离源图像四个方位进行划分。</p><p>默认中心位置不参与填充，需要填充使用关键字<code>fill</code>。</p><p>如果<code>border-image-source</code>是渐变图像，则渐变图像的尺寸是按元素的<code>border-box</code>尺寸来计算的。</p><h3 id="border-image-width九宫格边框宽度" tabindex="-1"><a class="header-anchor" href="#border-image-width九宫格边框宽度"><span><code>border-image-width</code>九宫格边框宽度</span></a></h3><ul><li>值为数值，这个数值会作为系数和<code>border-width</code>的宽度值相乘;</li><li>值为具体长度值，如：1px、1rem；</li><li>百分比，相对于元素本身尺寸计算，水平方位相对于宽度计算，垂直方位相对于高度计算；</li><li><code>auto</code>,会使用<code>border-image-slice</code>属性划分的尺寸作为九宫格宽度值；</li><li>和<code>border-width</code>一样，不支持负值；</li><li><code>border-image-width</code>宽度值很可能超过元素自身尺寸。</li></ul><h3 id="border-image-outset九宫格中间区域尺寸" tabindex="-1"><a class="header-anchor" href="#border-image-outset九宫格中间区域尺寸"><span><code>border-image-outset</code>九宫格中间区域尺寸</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image-outset</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: [ &lt;length&gt; | &lt;number&gt; ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{1,4}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>数值是相对于<code>border-width</code>计算。</p><h3 id="border-image-repeat" tabindex="-1"><a class="header-anchor" href="#border-image-repeat"><span><code>border-image-repeat</code></span></a></h3><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image-repeat</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: [ </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">stretch</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> | </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">repeat</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> | </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">round</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> | </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">space</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{1,2}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>stretch</code>：默认值，让源图像拉伸以充满显示区域。</li><li><code>repeat</code>：让源图像紧密相连平铺，保持原始比例，平铺单元在边界位置处可能会被截断。</li><li><code>round</code>：让源图像紧密相连平铺，适当伸缩，以确保平铺单元在边界位置处不会被截断。</li><li><code>space</code>：让源图像保持原始尺寸，平铺时彼此保持适当的等宽间隙，以确保平铺单元在边界位置处不会被截断；如果区域的尺寸不足以呈现至少一个源图像单元，则会以空白呈现。兼容性问题，这个关键字要谨慎使用。</li></ul><h3 id="缩写" tabindex="-1"><a class="header-anchor" href="#缩写"><span>缩写</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: &lt;&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image-source</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> || &lt;&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image-slice</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> [ / &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;border-image-width&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt; | / &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;border-image-width&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;? / &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;border-image-outset&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt; ]? || &lt;&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-image-repeat</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="position-sticky" tabindex="-1"><a class="header-anchor" href="#position-sticky"><span><code>position:sticky</code></span></a></h2>`,78)]))}const c=s(l,[["render",t]]),o=JSON.parse('{"path":"/css/base_concepts.html","title":"CSS个人学习整理","lang":"zh-CN","frontmatter":{"title":"CSS个人学习整理","icon":"css","category":"css","tag":["css"],"isOriginal":true,"timeline":true,"date":"2024-08-07T00:00:00.000Z","article":true,"head":[["meta",{"property":"og:url","content":"https://hanekawa.top/css/base_concepts.html"}],["meta",{"property":"og:site_name","content":"hanekawa-shiki"}],["meta",{"property":"og:title","content":"CSS个人学习整理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-09T09:54:03.000Z"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:published_time","content":"2024-08-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-09T09:54:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS个人学习整理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-09T09:54:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hanekawa-shiki\\",\\"url\\":\\"https://hanekawa.top\\"}]}"]]},"git":{"createdTime":1723020194000,"updatedTime":1723197243000,"contributors":[{"name":"kamishima-kaede","username":"kamishima-kaede","email":"kamiacgxu@gmail.com","commits":7,"url":"https://github.com/kamishima-kaede"}]},"readingTime":{"minutes":5.8,"words":1739},"filePathRelative":"css/base_concepts.md","localizedDate":"2024年8月7日","excerpt":""}');export{c as comp,o as data};
